// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String      @unique
  email     String      @unique
  password  String
  createdAt DateTime    @default(now())
  groups    GroupUser[]
  tracks    Track[]
}

model Group {
  id          String      @id @default(uuid())
  name        String
  description String?
  createdAt   DateTime    @default(now())
  users       GroupUser[]
  tracks      Track[]
}

model GroupUser {
  userId  String
  groupId String
  user    User   @relation(fields: [userId], references: [id])
  group   Group  @relation(fields: [groupId], references: [id])

  @@id([userId, groupId])
}

model Track {
  id           String    @id @default(uuid())
  title        String
  url          String
  type         TrackType @default(FILE)
  uploadedBy   User      @relation(fields: [uploadedById], references: [id], onDelete: Cascade)
  uploadedById String
  group        Group     @relation(fields: [groupId], references: [id], onDelete: Cascade)
  groupId      String
  createdAt    DateTime  @default(now())
}

enum TrackType {
  FILE // Uploaded to AWS S3
  LINK // External link (YouTube, SoundCloud, etc.)
}